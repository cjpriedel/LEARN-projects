{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shado\\\\Desktop\\\\cjpriedel-github\\\\LEARN projects\\\\dice rolling game\\\\src\\\\App.js\";\nimport { Component } from \"react\";\nimport side1 from './components/images/side1.png';\nimport side2 from './components/images/side2.png';\nimport side3 from './components/images/side3.png';\nimport side4 from './components/images/side4.png';\nimport side5 from './components/images/side5.png';\nimport side6 from './components/images/side6.png';\nimport diceHero from './components/images/diceHero.png';\nimport Dice from './components/Dice';\nimport RestartButton from \"./components/RestartButton\";\nimport Log from \"./components/Log\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDiceRoll = () => {\n      let {\n        diceRollImages,\n        diceRollHistory\n      } = this.state;\n      let diceRoll = Math.floor(Math.random() * diceRollImages.length);\n      let newDiceRoll = diceRollImages[diceRoll];\n      this.setState({\n        currentRollImage: newDiceRoll,\n        diceRollHistory: [...diceRollHistory, diceRoll + 1]\n      });\n    };\n\n    this.handleRestartClickEvent = () => {\n      this.setState({\n        diceRollImages: [side1, side2, side3, side4, side5, side6],\n        currentRollImage: diceHero,\n        diceRollHistory: []\n      });\n    };\n\n    this.state = {\n      diceRollImages: [side1, side2, side3, side4, side5, side6],\n      currentRollImage: diceHero,\n      diceRollHistory: []\n    };\n  }\n\n  render() {\n    const {\n      currentRollImage,\n      diceRollHistory\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dice Roller\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-container\",\n        children: [/*#__PURE__*/_jsxDEV(Dice, {\n          handleDiceRoll: this.handleDiceRoll,\n          currentRollImage: currentRollImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RestartButton, {\n          restartGame: this.handleRestartClickEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Log, {\n          diceLog: diceRollHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/shado/Desktop/cjpriedel-github/LEARN projects/dice rolling game/src/App.js"],"names":["Component","side1","side2","side3","side4","side5","side6","diceHero","Dice","RestartButton","Log","App","constructor","props","handleDiceRoll","diceRollImages","diceRollHistory","state","diceRoll","Math","floor","random","length","newDiceRoll","setState","currentRollImage","handleRestartClickEvent","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAEA,eAAe,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AACvCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,cATmB,GASF,MAAM;AACnB,UAAI;AAAEC,QAAAA,cAAF;AAAkBC,QAAAA;AAAlB,UAAsC,KAAKC,KAA/C;AACA,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,cAAc,CAACO,MAA1C,CAAf;AACA,UAAIC,WAAW,GAAGR,cAAc,CAACG,QAAD,CAAhC;AACA,WAAKM,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAEF,WAApB;AAAiCP,QAAAA,eAAe,EAAE,CAAC,GAAGA,eAAJ,EAAqBE,QAAQ,GAAG,CAAhC;AAAlD,OAAd;AACH,KAdkB;;AAAA,SAgBnBQ,uBAhBmB,GAgBO,MAAM;AAC5B,WAAKF,QAAL,CAAc;AACVT,QAAAA,cAAc,EAAE,CAACd,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,KAApC,CADN;AAEVmB,QAAAA,gBAAgB,EAAElB,QAFR;AAGVS,QAAAA,eAAe,EAAE;AAHP,OAAd;AAKH,KAtBkB;;AAEf,SAAKC,KAAL,GAAa;AACTF,MAAAA,cAAc,EAAE,CAACd,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,KAApC,CADP;AAETmB,MAAAA,gBAAgB,EAAElB,QAFT;AAGTS,MAAAA,eAAe,EAAE;AAHR,KAAb;AAKH;;AAiBDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA,gBAAF;AAAoBT,MAAAA;AAApB,QAAwC,KAAKC,KAAnD;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI,QAAC,IAAD;AACI,UAAA,cAAc,EAAE,KAAKH,cADzB;AAEI,UAAA,gBAAgB,EAAEW;AAFtB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,aAAD;AAAe,UAAA,WAAW,EAAE,KAAKC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,GAAD;AAAK,UAAA,OAAO,EAAEV;AAAd;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAzCsC","sourcesContent":["import { Component } from \"react\";\nimport side1 from './components/images/side1.png'\nimport side2 from './components/images/side2.png'\nimport side3 from './components/images/side3.png'\nimport side4 from './components/images/side4.png'\nimport side5 from './components/images/side5.png'\nimport side6 from './components/images/side6.png'\nimport diceHero from './components/images/diceHero.png'\nimport Dice from './components/Dice'\nimport RestartButton from \"./components/RestartButton\"\nimport Log from \"./components/Log\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            diceRollImages: [side1, side2, side3, side4, side5, side6],\n            currentRollImage: diceHero,\n            diceRollHistory: []\n        }\n    }\n\n    handleDiceRoll = () => {\n        let { diceRollImages, diceRollHistory } = this.state\n        let diceRoll = Math.floor(Math.random() * diceRollImages.length)\n        let newDiceRoll = diceRollImages[diceRoll]\n        this.setState({ currentRollImage: newDiceRoll, diceRollHistory: [...diceRollHistory, diceRoll + 1] })\n    }\n\n    handleRestartClickEvent = () => {\n        this.setState({\n            diceRollImages: [side1, side2, side3, side4, side5, side6],\n            currentRollImage: diceHero,\n            diceRollHistory: []\n        })\n    }\n\n    render() {\n        const { currentRollImage, diceRollHistory } = this.state\n        return (\n            <div className=\"game-container\">\n                <h1>Dice Roller</h1>\n                <div className=\"board-container\">\n                    <Dice\n                        handleDiceRoll={this.handleDiceRoll}\n                        currentRollImage={currentRollImage}\n                    />\n                    <RestartButton restartGame={this.handleRestartClickEvent} />\n                    <Log diceLog={diceRollHistory} />\n                </div>\n            </div>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}